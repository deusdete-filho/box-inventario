{"version":3,"sources":["src/utils/getValidationErros.ts","src/services/api.ts","src/hooks/auth.tsx","src/components/Background/index.ts","src/pages/SignIn/styles.ts","src/components/Input/styles.ts","src/components/Input/index.tsx","src/components/Button/styles.ts","src/components/Button/index.tsx","src/pages/SignIn/index.tsx","src/routes/auth.routes.tsx","src/pages/Dashboard/styles.ts","src/pages/Dashboard/index.tsx","src/pages/Product/styles.ts","src/pages/Product/index.tsx","src/pages/Category/styles.ts","src/pages/Category/index.tsx","src/pages/Category/Add/styles.ts","src/pages/Category/Add/index.tsx","src/pages/Product/Add/styles.ts","src/pages/Product/Add/index.tsx","src/pages/Category/Show/styles.ts","src/pages/Category/Show/index.tsx","src/pages/Product/Edit/styles.ts","src/pages/Product/Edit/index.tsx","src/routes/app.routes.tsx","src/routes/index.tsx","src/hooks/index.tsx","App.tsx","web-build/register-service-worker.js"],"names":["getValidationErros","err","validationErrors","inner","forEach","error","path","message","api","axios","create","baseURL","AuthContext","createContext","useAuth","context","useContext","Error","AuthProvider","children","useState","data","setData","loading","setLoading","useEffect","a","async","AsyncStorage","multiGet","token","user","JSON","parse","defaults","headers","Authorization","loadStorageData","signIn","useCallback","email","password","post","response","multiSet","stringify","signOut","multiRemove","Provider","value","styled","LinearGradient","attrs","colors","Container","View","ContainerLogo","props","isErrored","css","isFocused","TextInput","Feather","Text","forwardRef","ref","name","rest","inputEelementRef","useRef","useField","registerField","defaultValue","fieldName","inputValueRef","setIsFocused","setIsFilled","handleInputBlurFocus","handleInputBlurBlur","current","useImperativeHandle","focus","setValue","setNativeProps","text","clearValue","clear","placeholderTextColor","onFocus","onBlur","onChangeText","color","size","RectButton","ButtonText","Button","ActivityIndicator","SignIn","formRef","passwordInputRef","useNavigation","handleSignIn","setErrors","schema","Yup","shape","required","validate","abortEarly","errors","Alert","alert","Background","KeyboardAvoidingView","style","flex","behavior","Platform","OS","undefined","enabled","ScrollView","keyboardShouldPersistTaps","contentContainerStyle","onSubmit","autoCorrect","autoCapitalize","keyboardType","icon","placeholder","returnKeyType","onSubmitEditing","secureTextEntry","submitForm","onPress","Auth","createStackNavigator","AuthRoutes","Navigator","screenOptions","headerShown","cardStyle","backgroundColor","initialRouteName","Screen","component","Wrapper","Header","SafeAreaView","getStatusBarHeight","Title","Content","ProductList","FlatList","Device","TitleItem","BackButton","TouchableOpacity","Input","TitleContentList","Dashboard","navigate","naviagtion","product","setProduct","productotal","setProductTotal","refreshing","setRefreshing","setName","searchResults","setSearchResults","get","then","length","catch","navigateToProduct","id","string","toUpperCase","minuscula","results","filter","includes","StatusBar","barStyle","translucent","FontAwesome","onRefresh","ListHeaderComponent","ListFooterComponent","keyExtractor","item","renderItem","deposit","prefix","shelf","plate","amount","ContentTitile","AmountContnet","AmountContnetItem","Amount","AmountQtd","AmountQtdItem","EditButton","AmountPlus","goBack","useRoute","params","products","setProducts","setAmount","loadingamount","setLoadingamount","navigateToProductEdit","idproductdeposit","patch","category","Category","navigateToCategoryId","nameCategory","AppLoading","CategoryAdd","setNomeCategory","handleSubmitCategory","Select","ProductAdd","setPlate","setShelf","setDeposit","setCategory","plate_id","setSelectedPlate","shelf_id","setSelectedShelf","setAmountProduct","product_category_id","setSelectedCategory","setNameProduct","deposit_id","setSelectedDeposit","onValueChange","label","items","CategoryShow","ProductEdit","productdelete","delete","App","AppRoutes","headerMode","mode","Product","Routes","justifyContent","alignItems","AppProvider","useFonts","Roboto_400Regular","Roboto_500Medium","Roboto_700Bold","NavigationContainer","navigator","window","addEventListener","serviceWorker","register","scope","info","console"],"mappings":"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","file":"static/js/app.604f0058.chunk.js","sourcesContent":["import { ValidationError } from 'yup';\n\ninterface Errors {\n  [key: string]: string;\n}\nexport default function getValidationErros(err: ValidationError): Errors {\n  const validationErrors: Errors = {};\n\n  err.inner.forEach((error) => {\n    validationErrors[error.path] = error.message;\n  });\n  return validationErrors;\n}\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://161.35.119.88:3333',\n});\nexport default api;\n","import React, {\n  createContext,\n  useCallback,\n  useState,\n  useContext,\n  useEffect,\n} from 'react';\nimport api from '../services/api';\nimport { AsyncStorage } from 'react-native';\ninterface AuthState {\n  token: string;\n  user: object;\n}\ninterface LoginCredentials {\n  email: string;\n  password: string;\n}\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n}\ninterface AuthContextData {\n  user: User;\n  loading: boolean;\n  signIn(credentials: LoginCredentials): Promise<void>;\n  signOut(): void;\n}\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nfunction useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(' useAuth erro');\n  }\n  return context;\n}\nconst AuthProvider: React.FC = ({ children }) => {\n  // salvar dados do login no contexto\n  const [data, setData] = useState<AuthState>({} as AuthState);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function loadStorageData(): Promise<void> {\n      const [token, user] = await AsyncStorage.multiGet([\n        '@mina:token',\n        '@mina:user',\n      ]);\n      if (token[1] && user[1]) {\n        setData({ token: token[1], user: JSON.parse(user[1]) });\n        api.defaults.headers.Authorization = `Bearer ${token[1]}`;\n      }\n      setLoading(false);\n    }\n\n    loadStorageData();\n  }, []);\n  // funcao de realizar login na sessao\n  const signIn = useCallback(async ({ email, password }) => {\n    // evia os dados para a api\n    const response = await api.post('sessions', {\n      email,\n      password,\n    });\n    const { token, user } = response.data;\n\n    // salva os dados no storage do navegador\n    await AsyncStorage.multiSet([\n      ['@mina:token', token],\n      ['@mina:user', JSON.stringify(user)],\n    ]);\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n\n    setData({ token, user });\n  }, []);\n\n  // funcao de fazer logof\n  const signOut = useCallback(async () => {\n    await AsyncStorage.multiRemove(['@mina:token', '@mina:user']);\n\n    setData({} as AuthState);\n  }, []);\n  return (\n    <AuthContext.Provider value={{ user: data.user, signIn, signOut, loading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthProvider, useAuth };\n","import { LinearGradient } from 'expo-linear-gradient';\n\nimport styled from 'styled-components/native';\n\nexport default styled(LinearGradient).attrs({\n  colors: ['#eee', '#eee'],\n})`\n  flex: 1;\n`;\n","import styled from 'styled-components/native';\nimport {\n  getBottomSpace,\n  getStatusBarHeight,\n} from 'react-native-iphone-x-helper';\nimport { Platform } from 'react-native';\n\nexport const Container = styled.View`\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n  padding: 0 30px 0px;\n`;\n\nexport const ContainerLogo = styled.View`\n  align-items: center;\n  justify-content: center;\n  padding: 0 30px 70px;\n`;\n","import styled, { css } from 'styled-components/native';\nimport { Feather } from '@expo/vector-icons';\n\ninterface ContainerProps {\n  isFocused: boolean;\n  isErrored: boolean;\n}\nexport const Container = styled.View<ContainerProps>`\n  width: 100%;\n  background: #fbfbfb;\n  padding-left: 15px;\n  padding-right: 15px;\n  height: 50px;\n  border-radius: 3px;\n  margin-bottom: 15px;\n  border: 1px solid #fff;\n  color: #464646;\n  border: 1px solid #dededf;\n\n  flex-direction: row;\n  align-items: center;\n\n  ${(props) =>\n    props.isErrored &&\n    css`\n      border-color: #ff4040;\n    `}\n\n  ${(props) =>\n    props.isFocused &&\n    css`\n      border-color: #dc7121;\n    `}\n`;\nexport const TextInput = styled.TextInput`\n  flex: 1;\n  font-family: Roboto_500Medium;\n  color: #474747;\n  font-size: 16px;\n`;\n\nexport const Icon = styled(Feather)`\n  margin-right: 10px;\n\n  align-items: center;\n`;\nexport const Error = styled.View`\n  font-family: Roboto_500Medium;\n  color: #ff4040;\n  font-size: 14px;\n  flex-direction: row;\n  align-items: center;\n`;\nexport const Text = styled.Text`\n  font-family: Roboto_500Medium;\n  color: #ff4040;\n  font-size: 14px;\n  margin-left: 5px;\n`;\n","import React, {\n  useEffect,\n  useRef,\n  useImperativeHandle,\n  forwardRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { TextInputProps } from 'react-native';\nimport { Container, TextInput, Icon, Error, Text } from './styles';\nimport { useField } from '@unform/core';\nimport { Feather } from '@expo/vector-icons';\n\ninterface InputValueReference {\n  value: string;\n}\ninterface InputProps extends TextInputProps {\n  name: string;\n  icon: string;\n}\ninterface InputRef {\n  focus(): void;\n}\nconst Input: React.RefForwardingComponent<InputRef, InputProps> = (\n  { name, ...rest },\n  ref,\n) => {\n  const inputEelementRef = useRef<any>(null);\n\n  const { registerField, defaultValue = '', fieldName, error } = useField(name);\n  const inputValueRef = useRef<InputValueReference>({ value: defaultValue });\n\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const handleInputBlurFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlurBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputValueRef.current.value);\n  }, []);\n\n  useImperativeHandle(ref, () => ({\n    focus() {\n      inputEelementRef.current.focus();\n    },\n  }));\n\n  useEffect(() => {\n    registerField<string>({\n      name: fieldName,\n      ref: inputValueRef.current,\n      path: 'value',\n      setValue(ref: any, value) {\n        inputValueRef.current.value = value;\n        inputEelementRef.current.setNativeProps({ text: value });\n      },\n      clearValue() {\n        inputValueRef.current.value = '';\n        inputEelementRef.current.clear();\n      },\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isFocused={isFocused} isErrored={!!error}>\n      <TextInput\n        ref={inputEelementRef}\n        placeholderTextColor=\"#b7b7b7\"\n        defaultValue={defaultValue}\n        onFocus={handleInputBlurFocus}\n        onBlur={handleInputBlurBlur}\n        onChangeText={(value) => {\n          inputValueRef.current.value = value;\n        }}\n        {...rest}\n      />\n      {error && (\n        <Error>\n          <Feather name=\"alert-circle\" color=\"#C74F4F\" size={14} />\n        </Error>\n      )}\n    </Container>\n  );\n};\nexport default forwardRef(Input);\n","import styled from 'styled-components/native';\nimport { RectButton } from 'react-native-gesture-handler';\n\nexport const Container = styled(RectButton)`\n  width: 100%;\n  height: 50px;\n  background: #dc7121;\n  border: 0;\n  border-radius: 3px;\n\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ButtonText = styled.Text`\n  font-family: Roboto_700Bold;\n  color: #f4ede8;\n  font-size: 18px;\n`;\n","import React from 'react';\nimport { RectButtonProperties } from 'react-native-gesture-handler';\nimport { Container, ButtonText } from './styles';\nimport { ActivityIndicator } from 'react-native';\n\ninterface ButtonProps extends RectButtonProperties {\n  children: string;\n  loading: boolean;\n}\nconst Button: React.FC<ButtonProps> = ({ children, loading, ...rest }) => (\n  <Container {...rest}>\n    {loading ? (\n      <ActivityIndicator size=\"small\" color=\"#fff\" />\n    ) : (\n      <ButtonText>{children}</ButtonText>\n    )}\n  </Container>\n);\n\nexport default Button;\n","import React, { useCallback, useRef, useState } from 'react';\nimport * as Yup from 'yup';\nimport getValidationErros from '../../utils/getValidationErros';\nimport {\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n  TextInput,\n  Alert,\n} from 'react-native';\nimport { Form } from '@unform/mobile';\nimport { FormHandles } from '@unform/core';\n\nimport { useAuth } from '../../hooks/auth';\nimport Background from '../../components/Background';\n\nimport { Feather as Icon } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { Container, ContainerLogo } from './styles';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const passwordInputRef = useRef<TextInput>(null);\n  const navigation = useNavigation();\n  const [loading, setLoading] = useState(false);\n\n  const { signIn, user } = useAuth();\n  const handleSignIn = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string().required('Obrigatório').email('Email inválido'),\n          password: Yup.string().required('Obrigatória'),\n        });\n        // realizando validacao de dados\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n        setLoading(true);\n\n        await signIn({\n          email: data.email,\n          password: data.password,\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErros(err);\n          formRef.current?.setErrors(errors);\n          return;\n        }\n        setLoading(false);\n\n        Alert.alert(\n          'Erro na autenticação',\n          'Ocorreu um erro ao fazer login, cheque as suas credenciais',\n        );\n      }\n    },\n    [signIn],\n  );\n\n  return (\n    <>\n      <Background>\n        <KeyboardAvoidingView\n          style={{ flex: 1 }}\n          behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n          enabled\n        >\n          <ScrollView\n            keyboardShouldPersistTaps=\"handled\"\n            contentContainerStyle={{ flex: 1 }}\n          >\n            <Container>\n              <ContainerLogo>\n                <Icon name=\"box\" size={100} color=\"#dc7121\"></Icon>\n              </ContainerLogo>\n              <Form ref={formRef} onSubmit={handleSignIn}>\n                <Input\n                  autoCorrect={false}\n                  autoCapitalize=\"none\"\n                  keyboardType=\"email-address\"\n                  name=\"email\"\n                  icon=\"mail\"\n                  placeholder=\"Email\"\n                  returnKeyType=\"next\"\n                  onSubmitEditing={() => {\n                    passwordInputRef.current?.focus();\n                  }}\n                />\n                <Input\n                  ref={passwordInputRef}\n                  name=\"password\"\n                  icon=\"lock\"\n                  placeholder=\"Senha\"\n                  secureTextEntry\n                  returnKeyType=\"send\"\n                  onSubmitEditing={() => {\n                    formRef.current?.submitForm();\n                  }}\n                />\n                <Button\n                  loading={loading}\n                  onPress={() => {\n                    formRef.current?.submitForm();\n                  }}\n                >\n                  ENTRAR\n                </Button>\n              </Form>\n            </Container>\n          </ScrollView>\n        </KeyboardAvoidingView>\n      </Background>\n    </>\n  );\n};\nexport default SignIn;\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport SignIn from '../pages/SignIn';\n\nconst Auth = createStackNavigator();\n\nconst AuthRoutes: React.FC = () => (\n  <Auth.Navigator\n    screenOptions={{\n      headerShown: false,\n      cardStyle: { backgroundColor: '#eee' },\n    }}\n    initialRouteName=\"SignIn\"\n  >\n    <Auth.Screen name=\"SignIn\" component={SignIn} />\n  </Auth.Navigator>\n);\nexport default AuthRoutes;\n","import styled from 'styled-components/native';\nimport { FlatList, TextInput } from 'react-native';\nimport { RectButton } from 'react-native-gesture-handler';\nimport { getStatusBarHeight } from 'react-native-iphone-x-helper';\n\nimport { Product } from './index';\nexport const Wrapper = styled.View`\n  background: #dc7121;\n`;\nexport const Header = styled.SafeAreaView`\n  padding: 0px;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n  padding-top: ${getStatusBarHeight()}px;\n`;\nexport const Title = styled.Text`\n  color: #fff;\n  font-size: 20px;\n  font-family: Roboto_500Medium;\n`;\n\nexport const Content = styled.View`\n  flex: 1;\n`;\nexport const ProductList = styled(FlatList as new () => FlatList<Product>)`\n  width: 100%;\n  flex: 1;\n`;\n\nexport const Device = styled(RectButton)`\n  padding: 20px;\n  background: #fff;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  margin-bottom: 1px;\n\n  border-bottom-color: #ccc;\n`;\nexport const TitleItem = styled.Text`\n  font-size: 16px;\n  color: #474747;\n  font-family: Roboto_500Medium;\n  align-self: center;\n  text-transform: uppercase;\n`;\nexport const TitleContent = styled.Text`\n  font-size: 14px;\n  color: #666;\n  font-family: Roboto_400Regular;\n  align-self: center;\n  padding-top: 10px;\n`;\nexport const BackButton = styled.TouchableOpacity`\n  padding: 14px;\n`;\nexport const EditButton = styled.TouchableOpacity`\n  padding: 14px;\n`;\nexport const Input = styled(TextInput)`\n  width: 100%;\n  height: 50px;\n  background: #fff;\n  font-size: 18px;\n  padding-left: 16px;\n  justify-content: center;\n  align-items: center;\n  border-bottom-width: 1px;\n  border-color: #f1f1f1;\n  color: #464646;\n  font-family: Roboto_400Regular;\n`;\nexport const TitleContentList = styled.Text`\n  flex: 1;\n  font-size: 20px;\n  color: #666;\n  font-family: Roboto_400Regular;\n  align-self: center;\n  padding: 30px;\n`;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  ScrollView,\n  FlatList,\n  StatusBar,\n  Alert,\n  ActivityIndicator,\n} from 'react-native';\nimport {\n  Wrapper,\n  Header,\n  Title,\n  Content,\n  ProductList,\n  Device,\n  TitleItem,\n  TitleContentList,\n  BackButton,\n} from './styles';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { FontAwesome } from '@expo/vector-icons';\nimport { useAuth } from '../../hooks/auth';\nimport { Feather as Icon } from '@expo/vector-icons';\nimport api from '../../services/api';\nimport { Input } from './styles';\nexport interface Product {\n  [x: string]: any;\n  id: string;\n  deposit: { id: number; prefix: string };\n  product: { id: number; name: string; amount: number };\n  shelf: { id: number; name: string };\n  plate: { id: number; name: string };\n}\nconst Dashboard: React.FC = () => {\n  const { navigate } = useNavigation();\n  const naviagtion = useNavigation();\n\n  const [product, setProduct] = useState<Product[]>([]);\n  const [productotal, setProductTotal] = useState(0);\n  const [refreshing, setRefreshing] = useState(false);\n  const [name, setName] = useState('');\n  const [searchResults, setSearchResults] = useState<Product[]>([]);\n\n  useEffect(() => {\n    api\n      .get('productdeposit/')\n      .then((response) => {\n        setProduct(response.data);\n        setSearchResults(response.data);\n        setProductTotal(response.data.length);\n        setRefreshing(false);\n      })\n      .catch(function (error: string): any {\n        Alert.alert(\n          'Erro de conexão',\n          'Ocorreu um erro ao fazer requisição ao banco de dados',\n        );\n      });\n  }, [refreshing]);\n\n  const navigateToProduct = useCallback(\n    (id: string) => {\n      navigate('Product', { id });\n    },\n    [navigate],\n  );\n  function handlerrefreshing() {\n    setRefreshing(true);\n  }\n\n  function minuscula(name: string) {\n    var string = name.toUpperCase();\n    return setName(string);\n  }\n\n  useEffect(() => {\n    minuscula(name);\n    const results = product.filter((product: Product) =>\n      product.product.name.toUpperCase().includes(name),\n    );\n    setSearchResults(results);\n    setProductTotal(results.length);\n  }, [name]);\n  return (\n    <>\n      <StatusBar\n        barStyle=\"light-content\"\n        backgroundColor=\"#dc7121\"\n        translucent\n      />\n      <Wrapper>\n        <Header>\n          <BackButton onPress={() => naviagtion.navigate('Category')}>\n            <FontAwesome name=\"bars\" size={24} color=\"#fff\" />\n          </BackButton>\n\n          <Title>Todos os produtos</Title>\n          <BackButton\n            onPress={() => {\n              naviagtion.navigate('ProductAdd');\n            }}\n          >\n            <Icon name=\"plus\" size={24} color=\"#fff\"></Icon>\n          </BackButton>\n        </Header>\n      </Wrapper>\n\n      {searchResults ? (\n        <Content>\n          <ProductList\n            data={searchResults}\n            refreshing={refreshing}\n            onRefresh={handlerrefreshing}\n            ListHeaderComponent={\n              <Input\n                value={name}\n                onChangeText={setName}\n                placeholder=\"Digite para pesquisar\"\n              ></Input>\n            }\n            ListFooterComponent={\n              <TitleContentList>\n                {productotal === 0\n                  ? 'Nenhum produto encontrado'\n                  : `${productotal} produtos encontrados`}\n              </TitleContentList>\n            }\n            keyExtractor={(item) => item.id}\n            renderItem={({ item }) => (\n              <Device onPress={() => navigateToProduct(item.id)}>\n                <TitleItem>{item.product.name}</TitleItem>\n\n                <TitleItem>\n                  {item.deposit.prefix}\n                  {item.shelf.name}\n                  {item.plate.name} - {item.product.amount}\n                </TitleItem>\n              </Device>\n            )}\n          />\n        </Content>\n      ) : (\n        <ActivityIndicator style={{ flex: 1 }} color=\"#000\" />\n      )}\n    </>\n  );\n};\nexport default Dashboard;\n","import styled from 'styled-components/native';\nimport { getStatusBarHeight } from 'react-native-iphone-x-helper';\nexport const Wrapper = styled.View`\n  background: #dc7121;\n`;\nexport const Header = styled.SafeAreaView`\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n  padding-top: ${getStatusBarHeight()}px;\n`;\nexport const Title = styled.Text`\n  color: #fff;\n  font-size: 20px;\n  font-family: Roboto_500Medium;\n  text-transform: uppercase;\n`;\n\nexport const Content = styled.ScrollView`\n  flex: 1;\n`;\n\nexport const ProductTitle = styled.Text`\n  font-size: 22px;\n  color: #474747;\n  font-family: Roboto_500Medium;\n  padding: 16px;\n  text-transform: uppercase;\n`;\nexport const ContentTitile = styled.Text`\n  font-size: 14px;\n  color: #474747;\n  font-family: Roboto_700Bold;\n  padding: 16px;\n`;\nexport const AmountContnet = styled.View`\n  width: 100%;\n  font-size: 20px;\n  padding: 16px;\n  font-family: Roboto_400Regular;\n  align-self: center;\n  justify-content: space-between;\n  flex-direction: row;\n`;\nexport const AmountContnetItem = styled.View`\n  width: 100%;\n  font-size: 20px;\n  padding: 16px;\n  font-family: Roboto_400Regular;\n  align-self: center;\n  justify-content: space-between;\n  flex-direction: row;\n  background: #fff;\n`;\nexport const Amount = styled.Text`\n  font-size: 20px;\n  color: #474747;\n  font-family: Roboto_400Regular;\n  align-self: center;\n`;\nexport const AmountQtd = styled.Text`\n  font-size: 30px;\n  color: #474747;\n  font-family: Roboto_700Bold;\n  align-self: center;\n`;\nexport const AmountQtdItem = styled.Text`\n  font-size: 22px;\n  color: #474747;\n  font-family: Roboto_700Bold;\n  align-self: center;\n`;\nexport const BackButton = styled.TouchableOpacity`\n  padding: 14px;\n`;\nexport const EditButton = styled.TouchableOpacity`\n  padding: 14px;\n`;\nexport const TitleContentList = styled.Text`\n  flex: 1;\n  font-size: 20px;\n  color: #666;\n  font-family: Roboto_400Regular;\n  align-self: center;\n  padding: 30px;\n`;\n\nexport const AmountPlus = styled.TouchableOpacity`\n  padding: 16px;\n  background: #fff;\n  border-radius: 5px;\n`;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { ScrollView, StatusBar, Alert, ActivityIndicator } from 'react-native';\nimport {\n  Wrapper,\n  Header,\n  Title,\n  Content,\n  Device,\n  AmountContnetItem,\n  ProductTitle,\n  AmountPlus,\n  BackButton,\n  EditButton,\n  AmountQtdItem,\n  Amount,\n  AmountQtd,\n  AmountContnet,\n  ContentTitile,\n} from './styles';\nimport { useNavigation, useRoute } from '@react-navigation/native';\n\nimport { useAuth } from '../../hooks/auth';\nimport { Feather as Icon } from '@expo/vector-icons';\nimport api from '../../services/api';\ninterface RouteParams {\n  id: string;\n}\nexport interface Product {\n  id: string;\n  deposit: { id: number; name: string; prefix: string };\n  product: {\n    id: number;\n    name: string;\n    amount: number;\n    category: { name: string };\n  };\n  shelf: { id: number; name: string };\n  plate: { id: number; name: string };\n}\nconst Dashboard: React.FC = () => {\n  const { goBack } = useNavigation();\n  const route = useRoute();\n  const { id } = route.params as RouteParams;\n  const { navigate } = useNavigation();\n  const naviagtion = useNavigation();\n  const [products, setProducts] = useState<Product | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState(0);\n  const [loadingamount, setLoadingamount] = useState(false);\n\n  useEffect(() => {\n    setLoading(false);\n    api\n      .get(`productdeposit/${id}`)\n      .then((response) => {\n        setProducts(response.data);\n        setLoading(true);\n      })\n      .catch(function (error: string): any {\n        Alert.alert(\n          'Erro de conexão',\n          'Ocorreu um erro ao fazer requisição ao banco de dados',\n        );\n        goBack();\n      });\n  }, [id]);\n  useEffect(() => {\n    setAmount(products?.product.amount);\n  }, [products]);\n  const navigateToProductEdit = useCallback(\n    (id: string, idproductdeposit: string) => {\n      navigate('ProductEdit', { id, idproductdeposit });\n    },\n    [navigate],\n  );\n  function productadd() {\n    setLoadingamount(true);\n    api\n      .patch(`product/${products?.product.id}/amountadd`)\n      .then((response) => {\n        setAmount(amount + 1);\n        setLoadingamount(false);\n      })\n      .catch(function (error: string): any {\n        Alert.alert('Erro de conexão', 'Ocorreu um erro ao fazer requisição');\n      });\n  }\n  function productless() {\n    setLoadingamount(true);\n    api\n      .patch(`product/${products?.product.id}/amountless`)\n      .then((response) => {\n        setAmount(amount - 1);\n        setLoadingamount(false);\n      })\n      .catch(function (error: string): any {\n        Alert.alert('Erro', 'Ocorreu um erro ao fazer requisição');\n        setLoadingamount(false);\n      });\n  }\n  return (\n    <>\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#dc7121\" />\n      <Wrapper>\n        <Header>\n          <BackButton\n            onPress={() => {\n              goBack();\n            }}\n          >\n            <Icon name=\"chevron-left\" size={24} color=\"#fff\"></Icon>\n          </BackButton>\n          <Title>{products?.product.name}</Title>\n          <EditButton\n            onPress={() => {\n              navigateToProductEdit(products?.product.id, products?.id);\n            }}\n          >\n            <Icon name=\"edit\" size={24} color=\"#fff\"></Icon>\n          </EditButton>\n        </Header>\n      </Wrapper>\n      {loading ? (\n        <>\n          {products ? (\n            <Content>\n              <AmountContnet>\n                <AmountPlus\n                  onPress={() => {\n                    productless();\n                  }}\n                >\n                  <Icon name=\"minus\" size={30} color=\"#dc7121\"></Icon>\n                </AmountPlus>\n                {loadingamount ? (\n                  <ActivityIndicator size=\"large\"></ActivityIndicator>\n                ) : (\n                  <AmountQtd>{amount}</AmountQtd>\n                )}\n\n                <AmountPlus onPress={() => productadd()}>\n                  <Icon name=\"plus\" size={30} color=\"#dc7121\"></Icon>\n                </AmountPlus>\n              </AmountContnet>\n              <ContentTitile>Categoria</ContentTitile>\n              <AmountContnetItem>\n                <Amount>{products.product.category.name}</Amount>\n              </AmountContnetItem>\n              <ContentTitile>Localização</ContentTitile>\n              <AmountContnetItem>\n                <Amount>Depósito</Amount>\n                <AmountQtdItem>{products.deposit.prefix}</AmountQtdItem>\n              </AmountContnetItem>\n              <AmountContnetItem>\n                <Amount>Estante</Amount>\n                <AmountQtdItem>{products.shelf.name}</AmountQtdItem>\n              </AmountContnetItem>\n              <AmountContnetItem>\n                <Amount>Prateleira</Amount>\n                <AmountQtdItem>{products.plate.name}</AmountQtdItem>\n              </AmountContnetItem>\n            </Content>\n          ) : (\n            <>\n              <Amount>Nenhum produto</Amount>\n            </>\n          )}\n        </>\n      ) : (\n        <ActivityIndicator style={{ flex: 1 }} />\n      )}\n    </>\n  );\n};\nexport default Dashboard;\n","import styled from 'styled-components/native';\nimport { FlatList } from 'react-native';\nimport { RectButton } from 'react-native-gesture-handler';\nimport { getStatusBarHeight } from 'react-native-iphone-x-helper';\n\nimport { Product } from './index';\nexport const Wrapper = styled.View`\n  background: #dc7121;\n`;\nexport const Header = styled.SafeAreaView`\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n  padding-top: ${getStatusBarHeight()}px;\n`;\nexport const Title = styled.Text`\n  color: #fff;\n  font-size: 20px;\n  font-family: Roboto_500Medium;\n`;\n\nexport const Content = styled.View`\n  flex: 1;\n`;\nexport const ProductList = styled(FlatList as new () => FlatList<Product>)``;\n\nexport const Device = styled(RectButton)`\n  padding: 20px;\n  background: #fff;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  margin-bottom: 1px;\n`;\nexport const TitleItem = styled.Text`\n  font-size: 16px;\n  color: #474747;\n  font-family: Roboto_500Medium;\n  align-self: center;\n  text-transform: uppercase;\n`;\nexport const TitleContent = styled.Text`\n  font-size: 14px;\n  color: #666;\n  font-family: Roboto_400Regular;\n  align-self: center;\n  padding-top: 10px;\n`;\nexport const BackButton = styled.TouchableOpacity`\n  padding: 14px;\n`;\nexport const EditButton = styled.TouchableOpacity`\n  padding: 14px;\n`;\nexport const TitleContentList = styled.Text`\n  flex: 1;\n  font-size: 20px;\n  color: #666;\n  font-family: Roboto_400Regular;\n  align-self: center;\n  padding: 30px;\n`;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { StatusBar, Alert } from 'react-native';\nimport { AppLoading } from 'expo';\n\nimport {\n  Wrapper,\n  Header,\n  Title,\n  Content,\n  ProductList,\n  Device,\n  TitleItem,\n  TitleContent,\n  BackButton,\n  TitleContentList,\n} from './styles';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { FontAwesome } from '@expo/vector-icons';\nimport { useAuth } from '../../hooks/auth';\nimport { Feather as Icon } from '@expo/vector-icons';\nimport api from '../../services/api';\nexport interface Product {\n  id: string;\n  name: string;\n}\nconst Category: React.FC = () => {\n  const { navigate } = useNavigation();\n  const naviagtion = useNavigation();\n  const { goBack } = useNavigation();\n\n  const [product, setProduct] = useState<Product[]>([]);\n  const [productotal, setProductTotal] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n\n  useEffect(() => {\n    setLoading(false);\n    api\n      .get('productcategory/')\n      .then((response) => {\n        setProduct(response.data);\n        setProductTotal(response.data.length);\n        setLoading(true);\n        setRefreshing(false);\n      })\n      .catch(function (error: string): any {\n        Alert.alert(\n          'Erro de conexão',\n          'Ocorreu um erro ao fazer requisição ao banco de dados',\n        );\n      });\n  }, [refreshing]);\n\n  const navigateToCategoryId = useCallback(\n    (id: string, nameCategory: string) => {\n      naviagtion.navigate('CategoryShow', { id, nameCategory });\n    },\n    [],\n  );\n  function handlerrefreshing() {\n    setRefreshing(true);\n  }\n  return (\n    <>\n      <StatusBar\n        barStyle=\"light-content\"\n        backgroundColor=\"#dc7121\"\n        translucent\n      />\n      <Wrapper>\n        <Header>\n          <BackButton\n            onPress={() => {\n              goBack();\n            }}\n          >\n            <Icon name=\"chevron-left\" size={24} color=\"#fff\"></Icon>\n          </BackButton>\n\n          <Title>Categorias</Title>\n          <BackButton\n            onPress={() => {\n              naviagtion.navigate('CategoryAdd');\n            }}\n          >\n            <Icon name=\"plus\" size={24} color=\"#fff\"></Icon>\n          </BackButton>\n        </Header>\n      </Wrapper>\n\n      {product ? (\n        <Content>\n          <ProductList\n            data={product}\n            refreshing={refreshing}\n            onRefresh={handlerrefreshing}\n            ListFooterComponent={\n              <TitleContentList>\n                {productotal === 0\n                  ? ''\n                  : `${productotal} categorias cadastrados`}\n              </TitleContentList>\n            }\n            keyExtractor={(item) => item.id}\n            renderItem={({ item }) => (\n              <Device onPress={() => navigateToCategoryId(item.id, item.name)}>\n                <TitleItem>{item.name}</TitleItem>\n              </Device>\n            )}\n          />\n        </Content>\n      ) : (\n        <AppLoading />\n      )}\n    </>\n  );\n};\nexport default Category;\n","import styled from 'styled-components/native';\nimport { getStatusBarHeight } from 'react-native-iphone-x-helper';\nimport { TextInput } from 'react-native';\nexport const Wrapper = styled.View`\n  background: #dc7121;\n`;\nexport const Header = styled.SafeAreaView`\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n  padding-top: ${getStatusBarHeight()}px;\n`;\nexport const Title = styled.Text`\n  color: #fff;\n  font-size: 20px;\n  font-family: Roboto_500Medium;\n`;\n\nexport const Content = styled.ScrollView`\n  flex: 1;\n  padding: 16px;\n`;\n\nexport const ProductTitle = styled.Text`\n  font-size: 22px;\n  color: #474747;\n  font-family: Roboto_500Medium;\n  padding: 16px;\n`;\nexport const ContentTitile = styled.Text`\n  font-size: 14px;\n  color: #474747;\n  font-family: Roboto_700Bold;\n  padding: 16px;\n`;\nexport const AmountContnet = styled.View`\n  width: 100%;\n  font-size: 20px;\n  padding: 16px;\n  background: #fff;\n  font-family: Roboto_400Regular;\n  align-self: center;\n  justify-content: space-between;\n  flex-direction: row;\n`;\nexport const Amount = styled.Text`\n  font-size: 20px;\n  color: #474747;\n  font-family: Roboto_400Regular;\n  align-self: center;\n`;\nexport const AmountQtd = styled.Text`\n  font-size: 22px;\n  color: #474747;\n  font-family: Roboto_700Bold;\n  align-self: center;\n  background: #fff;\n`;\n\nexport const BackButton = styled.TouchableOpacity`\n  padding: 14px;\n`;\nexport const EditButton = styled.TouchableOpacity`\n  padding: 14px;\n`;\nexport const Select = styled.View`\n  width: 100%;\n  height: 50px;\n  background: #fff;\n  font-size: 18px;\n  font-family: Roboto_700Bold;\n  justify-content: center;\n  align-items: center;\n  border-width: 1px;\n  border-color: #ccc;\n  border-radius: 5px;\n  padding-left: 16px;\n`;\nexport const Input = styled(TextInput)`\n  width: 100%;\n  height: 50px;\n  background: #fff;\n  font-size: 14px;\n  padding-left: 16px;\n  justify-content: center;\n  align-items: center;\n  border-width: 1px;\n  border-color: #ccc;\n  border-radius: 5px;\n  margin-bottom: 16px;\n  color: #464646;\n  font-family: Roboto_400Regular;\n`;\n\nexport const TitleContentList = styled.Text`\n  flex: 1;\n  font-size: 20px;\n  color: #666;\n  font-family: Roboto_400Regular;\n  align-self: center;\n  padding: 30px;\n`;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { StatusBar, Alert } from 'react-native';\nimport {\n  Wrapper,\n  Header,\n  Title,\n  Content,\n  BackButton,\n  EditButton,\n  Input,\n} from './styles';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { Feather as Icon } from '@expo/vector-icons';\nimport api from '../../../services/api';\nimport Button from '../../../components/Button';\ninterface RouteParams {\n  id: string;\n}\n\nconst CategoryAdd: React.FC = () => {\n  const { goBack } = useNavigation();\n  const [name, setNomeCategory] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  function handleSubmitCategory() {\n    try {\n      if (name == '') return;\n      setLoading(true);\n      const responde = api.post('productcategory', { name });\n      setLoading(false);\n      Alert.alert('Cadastro realizado!');\n      goBack();\n    } catch {\n      Alert.alert('Erro no cadastro!');\n    }\n  }\n  return (\n    <>\n      <StatusBar\n        barStyle=\"light-content\"\n        backgroundColor=\"#dc7121\"\n        translucent\n      />\n      <Wrapper>\n        <Header>\n          <BackButton\n            onPress={() => {\n              goBack();\n            }}\n          >\n            <Icon name=\"chevron-left\" size={24} color=\"#fff\"></Icon>\n          </BackButton>\n          <Title>Nova Categoria</Title>\n          <EditButton onPress={() => {}}></EditButton>\n        </Header>\n      </Wrapper>\n\n      <Content>\n        <Input\n          value={name}\n          onChangeText={setNomeCategory}\n          placeholder=\"Digite o nome\"\n        ></Input>\n\n        <Button loading={loading} onPress={() => handleSubmitCategory()}>\n          CADASTRAR\n        </Button>\n      </Content>\n    </>\n  );\n};\nexport default CategoryAdd;\n","import styled from 'styled-components/native';\nimport { getStatusBarHeight } from 'react-native-iphone-x-helper';\nimport { TextInput } from 'react-native';\n\nexport const Wrapper = styled.View`\n  background: #dc7121;\n`;\nexport const Header = styled.SafeAreaView`\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n  padding-top: ${getStatusBarHeight()}px;\n`;\nexport const Title = styled.Text`\n  color: #fff;\n  font-size: 20px;\n  font-family: Roboto_500Medium;\n`;\n\nexport const Content = styled.ScrollView`\n  flex: 1;\n  padding: 16px;\n`;\n\nexport const BackButton = styled.TouchableOpacity`\n  padding: 14px;\n`;\nexport const EditButton = styled.TouchableOpacity`\n  padding: 14px;\n`;\nexport const Select = styled.View`\n  width: 100%;\n  height: 50px;\n  background: #fff;\n  font-size: 14px;\n  font-family: Roboto_400Regular;\n  justify-content: center;\n  align-items: center;\n  border-width: 1px;\n  border-color: #ccc;\n  border-radius: 5px;\n  padding-left: 16px;\n  margin-bottom: 16px;\n`;\nexport const Input = styled(TextInput)`\n  width: 100%;\n  height: 50px;\n  background: #fff;\n  font-size: 14px;\n  padding-left: 16px;\n  justify-content: center;\n  align-items: center;\n  border-width: 1px;\n  border-color: #ccc;\n  border-radius: 5px;\n  margin-bottom: 16px;\n  color: #464646;\n  font-family: Roboto_400Regular;\n`;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  ScrollView,\n  StatusBar,\n  Alert,\n  ActivityIndicator,\n  StyleSheet,\n  KeyboardAvoidingView,\n  Platform,\n} from 'react-native';\nimport RNPickerSelect from 'react-native-picker-select';\n\nimport {\n  Wrapper,\n  Header,\n  Title,\n  Content,\n  Select,\n  BackButton,\n  EditButton,\n  Input,\n} from './styles';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { Feather as Icon } from '@expo/vector-icons';\nimport api from '../../../services/api';\nimport Button from '../../../components/Button';\ninterface RouteParams {\n  id: string;\n}\ninterface Plate {\n  label: string;\n  value: string;\n}\n\nconst ProductAdd: React.FC = () => {\n  const { goBack } = useNavigation();\n\n  const [plate, setPlate] = useState<Plate[]>([]);\n  const [shelf, setShelf] = useState<Plate[]>([]);\n  const [deposit, setDeposit] = useState<Plate[]>([]);\n  const [category, setCategory] = useState<Plate[]>([]);\n\n  const [plate_id, setSelectedPlate] = useState('');\n  const [shelf_id, setSelectedShelf] = useState('');\n  const [amount, setAmountProduct] = useState('');\n  const [product_category_id, setSelectedCategory] = useState('');\n  const [name, setNameProduct] = useState('');\n  const [deposit_id, setSelectedDeposit] = useState('');\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    api\n      .get('plate/selectform')\n      .then((response) => {\n        setPlate(response.data);\n      })\n      .catch(function (error: string): any {\n        Alert.alert(\n          'Erro de conexão',\n          'Ocorreu um erro ao fazer requisição ao banco de dados',\n        );\n      });\n    api\n      .get('shelf/selectform')\n      .then((response) => {\n        setShelf(response.data);\n      })\n      .catch(function (error: string): any {\n        Alert.alert(\n          'Erro de conexão',\n          'Ocorreu um erro ao fazer requisição ao banco de dados',\n        );\n      });\n    api\n      .get('deposit/selectform')\n      .then((response) => {\n        setDeposit(response.data);\n      })\n      .catch(function (error: string): any {\n        Alert.alert(\n          'Erro de conexão',\n          'Ocorreu um erro ao fazer requisição ao banco de dados',\n        );\n      });\n    api\n      .get('productcategory/selectform')\n      .then((response) => {\n        setCategory(response.data);\n      })\n      .catch(function (error: string): any {\n        Alert.alert(\n          'Erro de conexão',\n          'Ocorreu um erro ao fazer requisição ao banco de dados',\n        );\n      });\n  }, []);\n\n  const placeholderPlate = {\n    label: 'Selecione a prateleira',\n    value: null,\n  };\n  const placeholderDeposit = {\n    label: 'Selecione o depósito',\n    value: null,\n  };\n  const placeholderCategory = {\n    label: 'Selecione a categoria',\n    value: null,\n  };\n  const placeholderShelf = {\n    label: 'Selecione a estante',\n    value: null,\n  };\n  function handleSubmitCategory() {\n    try {\n      if (product_category_id == '') {\n        Alert.alert('Selecione a categoria!');\n        return;\n      }\n      if (name == '') {\n        Alert.alert('Digite o nome!');\n        return;\n      }\n      if (amount == '') {\n        Alert.alert('Digite a quantidade!');\n        return;\n      }\n      if (deposit_id == '') {\n        Alert.alert('Selecione o depósito!');\n        return;\n      }\n      if (shelf_id == '') {\n        Alert.alert('Selecione a Estante!');\n        return;\n      }\n      if (plate_id == '') {\n        Alert.alert('Selecione a Prateleira!');\n        return;\n      }\n      setLoading(true);\n      const responde = api.post('productdeposit', {\n        name,\n        amount,\n        product_category_id,\n        deposit_id,\n        shelf_id,\n        plate_id,\n      });\n      setLoading(false);\n\n      Alert.alert('Cadastro realizado!');\n      goBack();\n    } catch {\n      Alert.alert('Erro no cadastro!');\n    }\n  }\n  return (\n    <>\n      <StatusBar\n        barStyle=\"light-content\"\n        backgroundColor=\"#dc7121\"\n        translucent\n      />\n      <KeyboardAvoidingView\n        style={{ flex: 1 }}\n        behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n        enabled\n      >\n        <Wrapper>\n          <Header>\n            <BackButton\n              onPress={() => {\n                goBack();\n              }}\n            >\n              <Icon name=\"chevron-left\" size={24} color=\"#fff\"></Icon>\n            </BackButton>\n            <Title>Novo Produto</Title>\n            <EditButton onPress={() => {}}></EditButton>\n          </Header>\n        </Wrapper>\n\n        <Content>\n          <Select>\n            <RNPickerSelect\n              onValueChange={(value) => setSelectedCategory(value)}\n              value={product_category_id}\n              placeholder={placeholderCategory}\n              items={category}\n            />\n          </Select>\n\n          <Input\n            value={name}\n            onChangeText={setNameProduct}\n            placeholder=\"Digite o nome\"\n            autoCorrect={false}\n          ></Input>\n          <Input\n            value={amount}\n            onChangeText={setAmountProduct}\n            placeholder=\"Digite a quantidade\"\n            keyboardType=\"number-pad\"\n          ></Input>\n          <Select>\n            <RNPickerSelect\n              onValueChange={(value) => setSelectedDeposit(value)}\n              value={deposit_id}\n              placeholder={placeholderDeposit}\n              items={deposit}\n            />\n          </Select>\n          <Select>\n            <RNPickerSelect\n              onValueChange={(value) => setSelectedShelf(value)}\n              value={shelf_id}\n              placeholder={placeholderShelf}\n              items={shelf}\n            />\n          </Select>\n          <Select>\n            <RNPickerSelect\n              onValueChange={(value) => setSelectedPlate(value)}\n              value={plate_id}\n              placeholder={placeholderPlate}\n              items={plate}\n            />\n          </Select>\n          <Button loading={loading} onPress={() => handleSubmitCategory()}>\n            CADASTRAR\n          </Button>\n        </Content>\n      </KeyboardAvoidingView>\n    </>\n  );\n};\n\nexport default ProductAdd;\n","import styled from 'styled-components/native';\nimport { FlatList } from 'react-native';\nimport { RectButton } from 'react-native-gesture-handler';\nimport { getStatusBarHeight } from 'react-native-iphone-x-helper';\n\nimport { Product } from './index';\nexport const Wrapper = styled.View`\n  background: #dc7121;\n`;\nexport const Header = styled.SafeAreaView`\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n  padding-top: ${getStatusBarHeight()}px;\n`;\nexport const Title = styled.Text`\n  color: #fff;\n  font-size: 20px;\n  font-family: Roboto_500Medium;\n`;\n\nexport const Content = styled.View`\n  flex: 1;\n`;\nexport const ProductList = styled(FlatList as new () => FlatList<Product>)``;\n\nexport const Device = styled(RectButton)`\n  padding: 20px;\n  background: #fff;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  margin-bottom: 1px;\n`;\nexport const TitleItem = styled.Text`\n  font-size: 16px;\n  color: #474747;\n  font-family: Roboto_500Medium;\n  align-self: center;\n  text-transform: uppercase;\n`;\nexport const TitleContent = styled.Text`\n  font-size: 14px;\n  color: #666;\n  font-family: Roboto_400Regular;\n  align-self: center;\n  padding-top: 10px;\n`;\nexport const TitleContentList = styled.Text`\n  flex: 1;\n  font-size: 20px;\n  color: #666;\n  font-family: Roboto_400Regular;\n  align-self: center;\n  padding: 30px;\n`;\nexport const BackButton = styled.TouchableOpacity`\n  padding: 14px;\n`;\nexport const EditButton = styled.TouchableOpacity`\n  padding: 14px;\n`;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { StatusBar, Alert, ActivityIndicator } from 'react-native';\nimport {\n  Wrapper,\n  Header,\n  Title,\n  Content,\n  ProductList,\n  Device,\n  TitleItem,\n  TitleContent,\n  BackButton,\n  TitleContentList,\n} from './styles';\nimport { useNavigation, useRoute } from '@react-navigation/native';\n\nimport { Feather as Icon } from '@expo/vector-icons';\nimport api from '../../../services/api';\nimport { Input } from '../../Dashboard/styles';\nexport interface Product {\n  id: string;\n  deposit: { id: number; prefix: string };\n  product: { id: number; name: string; amount: number };\n  shelf: { id: number; name: string };\n  plate: { id: number; name: string };\n}\ninterface RouteParams {\n  id: string;\n  nameCategory: string;\n}\nconst CategoryShow: React.FC = () => {\n  const { navigate } = useNavigation();\n  const naviagtion = useNavigation();\n  const { goBack } = useNavigation();\n\n  const route = useRoute();\n  const { id, nameCategory } = route.params as RouteParams;\n\n  const [product, setProduct] = useState<Product[]>([]);\n  const [productotal, setProductTotal] = useState(0);\n  const [refreshing, setRefreshing] = useState(false);\n  const [name, setName] = useState('');\n  const [searchResults, setSearchResults] = useState<Product[]>([]);\n  useEffect(() => {\n    api\n      .get(`productdeposit/${id}/category`)\n      .then((response) => {\n        setProduct(response.data);\n        setSearchResults(response.data);\n        setProductTotal(response.data.length);\n        setRefreshing(false);\n      })\n      .catch(function (error: string): any {\n        Alert.alert(\n          'Erro de conexão',\n          'Ocorreu um erro ao fazer requisição ao banco de dados',\n        );\n      });\n  }, [id, refreshing]);\n\n  const navigateToProduct = useCallback(\n    (id: string) => {\n      navigate('Product', { id });\n    },\n    [navigate],\n  );\n  function handlerrefreshing() {\n    setRefreshing(true);\n  }\n\n  function minuscula(name: string) {\n    var string = name.toUpperCase();\n    return setName(string);\n  }\n\n  useEffect(() => {\n    minuscula(name);\n    const results = product.filter((product: Product) =>\n      product.product.name.toUpperCase().includes(name),\n    );\n    setSearchResults(results);\n    setProductTotal(results.length);\n  }, [name]);\n\n  return (\n    <>\n      <StatusBar\n        barStyle=\"light-content\"\n        backgroundColor=\"#dc7121\"\n        translucent\n      />\n      <Wrapper>\n        <Header>\n          <BackButton\n            onPress={() => {\n              goBack();\n            }}\n          >\n            <Icon name=\"chevron-left\" size={24} color=\"#fff\"></Icon>\n          </BackButton>\n\n          <Title>{nameCategory}</Title>\n          <BackButton\n            onPress={() => {\n              naviagtion.navigate('ProductAdd');\n            }}\n          >\n            <Icon name=\"plus\" size={24} color=\"#fff\"></Icon>\n          </BackButton>\n        </Header>\n      </Wrapper>\n      {searchResults ? (\n        <Content>\n          <ProductList\n            data={searchResults}\n            refreshing={refreshing}\n            onRefresh={handlerrefreshing}\n            ListHeaderComponent={\n              <Input\n                value={name}\n                onChangeText={setName}\n                placeholder=\"Digite para pesquisar\"\n              ></Input>\n            }\n            ListFooterComponent={\n              <TitleContentList>\n                {productotal === 0\n                  ? 'Nenhum produto encontrado'\n                  : `${productotal} produtos encontrados`}\n              </TitleContentList>\n            }\n            keyExtractor={(item) => item.id}\n            renderItem={({ item }) => (\n              <Device onPress={() => navigateToProduct(item.id)}>\n                <TitleItem>{item.product.name}</TitleItem>\n\n                <TitleItem>\n                  {item.deposit.prefix}\n                  {item.shelf.name}\n                  {item.plate.name} - {item.product.amount}\n                </TitleItem>\n              </Device>\n            )}\n          />\n        </Content>\n      ) : (\n        <ActivityIndicator style={{ flex: 1 }} color=\"#000\" />\n      )}\n    </>\n  );\n};\nexport default CategoryShow;\n","import styled from 'styled-components/native';\nimport { getStatusBarHeight } from 'react-native-iphone-x-helper';\nimport { TextInput } from 'react-native';\n\nexport const Wrapper = styled.View`\n  background: #dc7121;\n`;\nexport const Header = styled.SafeAreaView`\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n  padding-top: ${getStatusBarHeight()}px;\n`;\nexport const Title = styled.Text`\n  color: #fff;\n  font-size: 20px;\n  font-family: Roboto_500Medium;\n`;\n\nexport const Content = styled.ScrollView`\n  flex: 1;\n  padding: 16px;\n`;\n\nexport const BackButton = styled.TouchableOpacity`\n  padding: 14px;\n`;\nexport const EditButton = styled.TouchableOpacity`\n  padding: 14px;\n`;\nexport const Select = styled.View`\n  width: 100%;\n  height: 50px;\n  background: #fff;\n  font-size: 14px;\n  font-family: Roboto_400Regular;\n  justify-content: center;\n  align-items: center;\n  border-width: 1px;\n  border-color: #ccc;\n  border-radius: 5px;\n  padding-left: 16px;\n  margin-bottom: 16px;\n`;\nexport const Input = styled(TextInput)`\n  width: 100%;\n  height: 50px;\n  background: #fff;\n  font-size: 14px;\n  padding-left: 16px;\n  justify-content: center;\n  align-items: center;\n  border-width: 1px;\n  border-color: #ccc;\n  border-radius: 5px;\n  margin-bottom: 16px;\n  color: #464646;\n  font-family: Roboto_400Regular;\n`;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  ScrollView,\n  StatusBar,\n  Alert,\n  ActivityIndicator,\n  StyleSheet,\n  KeyboardAvoidingView,\n  Platform,\n} from 'react-native';\nimport RNPickerSelect from 'react-native-picker-select';\n\nimport {\n  Wrapper,\n  Header,\n  Title,\n  Content,\n  Select,\n  BackButton,\n  EditButton,\n  Input,\n} from './styles';\nimport { useNavigation, useRoute } from '@react-navigation/native';\n\nimport { Feather as Icon } from '@expo/vector-icons';\nimport api from '../../../services/api';\nimport Button from '../../../components/Button';\ninterface RouteParams {\n  id: string;\n  idproductdeposit: string;\n}\ninterface Product {\n  name: string;\n  amount: string;\n}\ninterface RouteParams {\n  id: string;\n}\nconst ProductEdit: React.FC = () => {\n  const { goBack, navigate } = useNavigation();\n\n  const [product, setProduct] = useState<Product | null>(null);\n  const [name, setName] = useState('');\n\n  const route = useRoute();\n  const { id, idproductdeposit } = route.params as RouteParams;\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(false);\n    api\n      .get(`product/${id}`)\n      .then((response) => {\n        setProduct(response.data);\n      })\n      .catch(function (error: string): any {\n        Alert.alert(\n          'Erro de conexão',\n          'Ocorreu um erro ao fazer requisição ao banco de dados',\n        );\n        goBack();\n      });\n  }, [id]);\n  useEffect(() => {\n    setName(product?.name);\n  }, [product]);\n  function handleSubmitCategory() {\n    try {\n      if (name == '') {\n        Alert.alert('Digite o nome!');\n        return;\n      }\n      setLoading(true);\n      const responde = api.patch(`product/${id}/name`, {\n        name,\n      });\n      setLoading(false);\n\n      Alert.alert('Alteração realizada!');\n    } catch {\n      Alert.alert('Erro!');\n    }\n  }\n  const productdelete = useCallback(() => {\n    api\n      .delete(`productdeposit/${idproductdeposit}`)\n      .then((response) => {\n        Alert.alert('Excluido');\n        navigate('Dashboard');\n      })\n      .catch(function (error: string): any {\n        Alert.alert(\n          'Erro de conexão',\n          'Ocorreu um erro ao fazer requisição ao banco de dados',\n        );\n      });\n  }, [product]);\n  return (\n    <>\n      <StatusBar\n        barStyle=\"light-content\"\n        backgroundColor=\"#dc7121\"\n        translucent\n      />\n      <KeyboardAvoidingView\n        style={{ flex: 1 }}\n        behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n        enabled\n      >\n        <Wrapper>\n          <Header>\n            <BackButton\n              onPress={() => {\n                goBack();\n              }}\n            >\n              <Icon name=\"chevron-left\" size={24} color=\"#fff\"></Icon>\n            </BackButton>\n            <Title>Editar Produto</Title>\n            <BackButton\n              onPress={() => {\n                productdelete();\n              }}\n            >\n              <Icon name=\"trash\" size={24} color=\"#fff\"></Icon>\n            </BackButton>\n          </Header>\n        </Wrapper>\n        {product ? (\n          <Content>\n            <Input\n              keyboardType=\"decimal-pad\"\n              value={name}\n              onChangeText={setName}\n              placeholder=\"Digite o nome\"\n              autoCorrect={false}\n            ></Input>\n            <Button loading={loading} onPress={() => handleSubmitCategory()}>\n              SALVAR\n            </Button>\n          </Content>\n        ) : (\n          <ActivityIndicator style={{ flex: 1 }}></ActivityIndicator>\n        )}\n      </KeyboardAvoidingView>\n    </>\n  );\n};\n\nexport default ProductEdit;\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport Dashboard from '../pages/Dashboard';\nimport Product from '../pages/Product';\nimport Category from '../pages/Category';\nimport CategoryAdd from '../pages/Category/Add';\nimport ProductAdd from '../pages/Product/Add';\nimport CategoryShow from '../pages/Category/Show';\nimport ProductEdit from '../pages/Product/Edit';\nconst App = createStackNavigator();\n\nconst AppRoutes: React.FC = () => (\n  <>\n    <App.Navigator headerMode=\"none\" mode=\"card\">\n      <App.Screen name=\"Dashboard\" component={Dashboard} />\n      <App.Screen name=\"Product\" component={Product} />\n      <App.Screen name=\"ProductAdd\" component={ProductAdd} />\n      <App.Screen name=\"Category\" component={Category} />\n      <App.Screen name=\"CategoryAdd\" component={CategoryAdd} />\n      <App.Screen name=\"CategoryShow\" component={CategoryShow} />\n      <App.Screen name=\"ProductEdit\" component={ProductEdit} />\n    </App.Navigator>\n  </>\n);\nexport default AppRoutes;\n","import React from 'react';\nimport AuthRoutes from './auth.routes';\nimport AppRoutes from './app.routes';\nimport { ActivityIndicator, View } from 'react-native';\nimport { useAuth } from '../hooks/auth';\n\nconst Routes: React.FC = () => {\n  const { user, loading } = useAuth();\n\n  if (loading) {\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <ActivityIndicator size=\"large\" color=\"#1cb970\" />\n      </View>\n    );\n  }\n  return user ? <AppRoutes /> : <AuthRoutes />;\n};\nexport default Routes;\n","import React from 'react';\n\nimport {AuthProvider} from './auth';\n\nconst AppProvider: React.FC = ({children}) => (\n  <AuthProvider>{children}</AuthProvider>\n);\nexport default AppProvider;\n","import 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { AppLoading } from 'expo';\n\nimport React from 'react';\nimport { View, StatusBar, ActivityIndicator } from 'react-native';\nimport {\n  Roboto_400Regular,\n  Roboto_700Bold,\n  Roboto_500Medium,\n  useFonts,\n} from '@expo-google-fonts/roboto';\n\nimport Routes from './src/routes';\nimport AppProvider from './src/hooks';\n\nconst App: React.FC = () => {\n  const [fontsLoaded] = useFonts({\n    Roboto_400Regular,\n    Roboto_500Medium,\n    Roboto_700Bold,\n  });\n  if (!fontsLoaded) {\n    return <ActivityIndicator style={{ flex: 1 }} color=\"#000\" />;\n  }\n  return (\n    <NavigationContainer>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#eee\" />\n      <AppProvider>\n        <View style={{ flex: 1, backgroundColor: '#eee' }}>\n          <Routes />\n        </View>\n      </AppProvider>\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}